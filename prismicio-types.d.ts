// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Item in *Global Nav → Menu Item*
 */
export interface GlobalNavDocumentDataMenuItemItem {
  /**
   * Menu Link field in *Global Nav → Menu Item*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_item[].menu_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  menu_link: prismic.LinkField;

  /**
   * Menu Label field in *Global Nav → Menu Item*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_item[].menu_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  menu_label: prismic.KeyTextField;
}

/**
 * Content for Global Nav documents
 */
interface GlobalNavDocumentData {
  /**
   * Company Name field in *Global Nav*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.company_name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  company_name: prismic.RichTextField;

  /**
   * Menu Item field in *Global Nav*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: global_nav.menu_item[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  menu_item: prismic.GroupField<Simplify<GlobalNavDocumentDataMenuItemItem>>;
}

/**
 * Global Nav document from Prismic
 *
 * - **API ID**: `global_nav`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type GlobalNavDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<GlobalNavDocumentData>,
    "global_nav",
    Lang
  >;

type HomepageDocumentDataSlicesSlice = SplitImageTextSlice | TextSliceSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

type MarketingPageDocumentDataSlicesSlice =
  | TextSliceSlice
  | SplitImageTextSlice
  | EmbedSectionSlice;

/**
 * Content for Marketing Page documents
 */
interface MarketingPageDocumentData {
  /**
   * Slice Zone field in *Marketing Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: marketing_page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<MarketingPageDocumentDataSlicesSlice> /**
   * Meta Title field in *Marketing Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: marketing_page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Marketing Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: marketing_page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Marketing Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: marketing_page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Marketing Page document from Prismic
 *
 * - **API ID**: `marketing_page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MarketingPageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<MarketingPageDocumentData>,
    "marketing_page",
    Lang
  >;

export type AllDocumentTypes =
  | GlobalNavDocument
  | HomepageDocument
  | MarketingPageDocument;

/**
 * Primary content in *EmbedSection → Default → Primary*
 */
export interface EmbedSectionSliceDefaultPrimary {
  /**
   * Background Color field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Grey" | "Green">;

  /**
   * Text field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Embed field in *EmbedSection → Default → Primary*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: embed_section.default.primary.embed
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  embed: prismic.EmbedField;
}

/**
 * Default variation for EmbedSection Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSectionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<EmbedSectionSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *EmbedSection*
 */
type EmbedSectionSliceVariation = EmbedSectionSliceDefault;

/**
 * EmbedSection Shared Slice
 *
 * - **API ID**: `embed_section`
 * - **Description**: EmbedSection
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmbedSectionSlice = prismic.SharedSlice<
  "embed_section",
  EmbedSectionSliceVariation
>;

/**
 * Primary content in *SplitImageText → Default → Primary*
 */
export interface SplitImageTextSliceDefaultPrimary {
  /**
   * Text field in *SplitImageText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Image field in *SplitImageText → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text Align field in *SplitImageText → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.default.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"text-center" | "text-left">;
}

/**
 * Default variation for SplitImageText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SplitImageTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Split Image - Right → Primary*
 */
export interface SplitImageTextSliceSplitImageRightPrimary {
  /**
   * Text field in *SplitImageText → Split Image - Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageRight.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Image field in *SplitImageText → Split Image - Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Split Image - Right variation for SplitImageText Slice
 *
 * - **API ID**: `splitImageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitImageRight = prismic.SharedSliceVariation<
  "splitImageRight",
  Simplify<SplitImageTextSliceSplitImageRightPrimary>,
  never
>;

/**
 * Primary content in *SplitImageText → Split Image - Button Left → Primary*
 */
export interface SplitImageTextSliceSplitImageButtonLeftPrimary {
  /**
   * Text field in *SplitImageText → Split Image - Button Left → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonLeft.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Image field in *SplitImageText → Split Image - Button Left → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonLeft.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Split Image - Button Left → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonLeft.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Split Image - Button Left → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonLeft.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Split Image - Button Left variation for SplitImageText Slice
 *
 * - **API ID**: `splitImageButtonLeft`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitImageButtonLeft =
  prismic.SharedSliceVariation<
    "splitImageButtonLeft",
    Simplify<SplitImageTextSliceSplitImageButtonLeftPrimary>,
    never
  >;

/**
 * Primary content in *SplitImageText → Split Image - Button Right → Primary*
 */
export interface SplitImageTextSliceSplitImageButtonRightPrimary {
  /**
   * Text field in *SplitImageText → Split Image - Button Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonRight.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Image field in *SplitImageText → Split Image - Button Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonRight.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Split Image - Button Right → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonRight.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Split Image - Button Right → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.splitImageButtonRight.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Split Image - Button Right variation for SplitImageText Slice
 *
 * - **API ID**: `splitImageButtonRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceSplitImageButtonRight =
  prismic.SharedSliceVariation<
    "splitImageButtonRight",
    Simplify<SplitImageTextSliceSplitImageButtonRightPrimary>,
    never
  >;

/**
 * Primary content in *SplitImageText → Hero Section → Primary*
 */
export interface SplitImageTextSliceHeroSectionPrimary {
  /**
   * Title field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Paragraph field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  paragraph: prismic.RichTextField;

  /**
   * Image field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Button Link field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;

  /**
   * Background Color field in *SplitImageText → Hero Section → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: split_image_text.heroSection.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<"Grey" | "Green">;
}

/**
 * Hero Section variation for SplitImageText Slice
 *
 * - **API ID**: `heroSection`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSliceHeroSection = prismic.SharedSliceVariation<
  "heroSection",
  Simplify<SplitImageTextSliceHeroSectionPrimary>,
  never
>;

/**
 * Slice variation for *SplitImageText*
 */
type SplitImageTextSliceVariation =
  | SplitImageTextSliceDefault
  | SplitImageTextSliceSplitImageRight
  | SplitImageTextSliceSplitImageButtonLeft
  | SplitImageTextSliceSplitImageButtonRight
  | SplitImageTextSliceHeroSection;

/**
 * SplitImageText Shared Slice
 *
 * - **API ID**: `split_image_text`
 * - **Description**: SplitImageText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitImageTextSlice = prismic.SharedSlice<
  "split_image_text",
  SplitImageTextSliceVariation
>;

/**
 * Primary content in *TextSlice → Default → Primary*
 */
export interface TextSliceSliceDefaultPrimary {
  /**
   * Text Field field in *TextSlice → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.default.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;
}

/**
 * Default variation for TextSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextSliceSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *TextSlice → Text - With Button → Primary*
 */
export interface TextSliceSliceTextWithButtonPrimary {
  /**
   * Text Field field in *TextSlice → Text - With Button → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.textWithButton.primary.text_field
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text_field: prismic.RichTextField;

  /**
   * Button Link field in *TextSlice → Text - With Button → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.textWithButton.primary.button_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button_link: prismic.LinkField;

  /**
   * Button Label field in *TextSlice → Text - With Button → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slice.textWithButton.primary.button_label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  button_label: prismic.KeyTextField;
}

/**
 * Text - With Button variation for TextSlice Slice
 *
 * - **API ID**: `textWithButton`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSliceTextWithButton = prismic.SharedSliceVariation<
  "textWithButton",
  Simplify<TextSliceSliceTextWithButtonPrimary>,
  never
>;

/**
 * Slice variation for *TextSlice*
 */
type TextSliceSliceVariation =
  | TextSliceSliceDefault
  | TextSliceSliceTextWithButton;

/**
 * TextSlice Shared Slice
 *
 * - **API ID**: `text_slice`
 * - **Description**: TextSlice
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliceSlice = prismic.SharedSlice<
  "text_slice",
  TextSliceSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      GlobalNavDocument,
      GlobalNavDocumentData,
      GlobalNavDocumentDataMenuItemItem,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      MarketingPageDocument,
      MarketingPageDocumentData,
      MarketingPageDocumentDataSlicesSlice,
      AllDocumentTypes,
      EmbedSectionSlice,
      EmbedSectionSliceDefaultPrimary,
      EmbedSectionSliceVariation,
      EmbedSectionSliceDefault,
      SplitImageTextSlice,
      SplitImageTextSliceDefaultPrimary,
      SplitImageTextSliceSplitImageRightPrimary,
      SplitImageTextSliceSplitImageButtonLeftPrimary,
      SplitImageTextSliceSplitImageButtonRightPrimary,
      SplitImageTextSliceHeroSectionPrimary,
      SplitImageTextSliceVariation,
      SplitImageTextSliceDefault,
      SplitImageTextSliceSplitImageRight,
      SplitImageTextSliceSplitImageButtonLeft,
      SplitImageTextSliceSplitImageButtonRight,
      SplitImageTextSliceHeroSection,
      TextSliceSlice,
      TextSliceSliceDefaultPrimary,
      TextSliceSliceTextWithButtonPrimary,
      TextSliceSliceVariation,
      TextSliceSliceDefault,
      TextSliceSliceTextWithButton,
    };
  }
}
